{% extends "_layouts/site" %}

{% block content %}

    <div class="container">

        {% macro errorList(errors) %}
        {% if errors %}
            {{ ul(errors, {class: 'errors'}) }}
        {% endif %}
        {% endmacro %}

        {# If there were any validation errors, an `entry` variable will be 
        passed to the template, which contains the posted values 
        and validation errors. If that’s not set, we’ll default 
        to a new entry. #}
        {% set entry = entry ?? create('craft\\elements\\Entry') %}


        {# Add `enctype="multipart/form-data"` to `<form>` if you’re 
        uploading files. #}
        <form class="form" method="post" accept-charset="UTF-8">
            {{ csrfInput() }}
            {{ actionInput('entries/save-entry') }}
            {{ redirectInput('spelen/{slug}') }}
            {{ hiddenInput('sectionId', '1') }}
            {{ hiddenInput('enabled', '1') }}
            {{ hiddenInput('fields[isPublic]', '') }}

            <label for="title">Naam van het spel</label>
            {{ input('text', 'title', 'test van matrix', {
                class: 'form-input',
                required: true,
                name: 'fields[title]',
                id: 'title',
            }) }}
            {{ _self.errorList(entry.getErrors('title')) }}

            <label for="youngestAge">Minimum leeftijd</label>
            {{ tag('input', {
                id: 'youngestAge',
                type: 'number',
                class: 'form-input',
                required: true,
                name: 'fields[youngestAge]',
                value: 2,
                text: entry.youngestAge,
            }) }}
            {{ _self.errorList(entry.getErrors('youngestAge')) }}

            <label for="oldestAge">Maximum leeftijd</label>
            {{ tag('input', {
                id: 'oldestAge',
                type: 'number',
                class: 'form-input',
                required: true,
                name: 'fields[oldestAge]',
                value: 2,
                text: entry.oldestAge,
            }) }}
            {{ _self.errorList(entry.getErrors('oldestAge')) }}

            <label for="leastAmountOfPlayers">Minimum aantal spelers</label>
            {{ tag('input', {
                id: 'leastAmountOfPlayers',
                type: 'number',
                class: 'form-input',
                required: true,
                name: 'fields[leastAmountOfPlayers]',
                value: 2,
                text: entry.leastAmountOfPlayers,
            }) }}
            {{ _self.errorList(entry.getErrors('leastAmountOfPlayers')) }}

            <label for="mostAmountOfPlayers">Maximum aantal spelers</label>
            {{ tag('input', {
                id: 'mostAmountOfPlayers',
                type: 'number',
                class: 'form-input',
                required: true,
                name: 'fields[mostAmountOfPlayers]',
                value: 2,
                text: entry.mostAmountOfPlayers,
            }) }}
            {{ _self.errorList(entry.getErrors('mostAmountOfPlayers')) }}

            <label for="groups">Aantal groepen</label>
            {{ tag('input', {
                id: 'groups',
                type: 'number',
                class: 'form-input',
                required: true,
                name: 'fields[groups]',
                value: 2,
                text: entry.groups,
            }) }}
            {{ _self.errorList(entry.getErrors('groups')) }}

            <label for="gametime">Speelduur</label>
            {{ tag('input', {
                id: 'gametime',
                type: 'time',
                class: 'form-input',
                required: true,
                name: 'fields[gametime]',
                value: '10:00',
                text: entry.gametime,
            }) }}
            {{ _self.errorList(entry.getErrors('gametime')) }}


            <label for="intro">Intro</label>
            {{ tag('input', {
                id: 'intro',
                type: 'textarea',
                class: 'form-textarea',
                required: true,
                name: 'fields[intro]',
                value: 'bhkrere ebjkerjbkrejb erkjb er',
                text: entry.intro,
            }) }}
            {{ _self.errorList(entry.getErrors('intro')) }}

            <label for="purpose">Doel van het spel</label>
            {{ tag('input', {
                id: 'purpose',
                type: 'text',
                class: 'form-textarea',
                required: true,
                name: 'fields[purpose]',
                value: 'bhkrere ebjkerjbkrejb erkjb er',
                text: entry.purpose,
            }) }}
            {{ _self.errorList(entry.getErrors('purpose')) }}

            <label for="explenation">Speluitleg</label>
            {{ tag('input', {
                id: 'explenation',
                type: 'text',
                class: 'form-textarea',
                required: true,
                name: 'fields[explenation]',
                value: 'bhkrere ebjkerjbkrejb erkjb er',
                text: entry.explenation,
            }) }}
            {{ _self.errorList(entry.getErrors('explenation')) }}

            {# Include a hidden input first so Craft knows to update the existing value
            if no checkboxes are checked. #}
            {{ hiddenInput('fields[gameType]', '') }}

            {# Get all of the possible category options #}
            {% set gameTypeCategory = craft.categories()
                .group('gameType')
                .all() 
            %}

            <ul>
                {% nav possibleCategory in gameTypeCategory %}
                    <li>
                    <label>
                        {{ input(
                        'checkbox',
                        'fields[gameType][]',
                        possibleCategory.id,
                        { checked: true}
                        ) }}
                        {{ possibleCategory.title }}
                    </label>
                    {% ifchildren %}
                        <ul>
                        {% children %}
                        </ul>
                    {% endifchildren %}
                    </li>
                {% endnav %}
            </ul>

            {# Include a hidden input first so Craft knows to update the existing value
            if no checkboxes are checked. #}
            {{ hiddenInput('fields[terrain]', '') }}

            {# Get all of the possible category options #}
            {% set terrainCategory = craft.categories()
                .group('terrainType')
                .all() 
            %}

            <ul>
                {% nav possibleCategory in terrainCategory %}
                    <li>
                    <label>
                        {{ input(
                        'checkbox',
                        'fields[terrain][]',
                        possibleCategory.id,
                        { checked: true}
                        ) }}
                        {{ possibleCategory.title }}
                    </label>
                    {% ifchildren %}
                        <ul>
                        {% children %}
                        </ul>
                    {% endifchildren %}
                    </li>
                {% endnav %}
            </ul>

            {# Include a hidden input first so Craft knows to update the existing value
            if no checkboxes are checked. #}
            {{ hiddenInput('fields[theme]', '') }}

            {# Get all of the possible category options #}
            {% set themeCategory = craft.categories()
                .group('themeType')
                .all() 
            %}

            <ul>
                {% nav possibleCategory in themeCategory %}
                    <li>
                    <label>
                        {{ input(
                        'checkbox',
                        'fields[theme][]',
                        possibleCategory.id,
                        { checked: true}
                        ) }}
                        {{ possibleCategory.title }}
                    </label>
                    {% ifchildren %}
                        <ul>
                        {% children %}
                        </ul>
                    {% endifchildren %}
                    </li>
                {% endnav %}
            </ul>

            <label for="isPublic">Publiek</label>
            {{ tag('input', {
                id: 'isPublic',
                type: 'checkbox',
                class: 'form-checkbox',
                name: 'fields[isPublic]',
                value: '1',
                checked: (entry.isPublic ?? false) ? true : false,
            }) }}
            {{ _self.errorList(entry.getErrors('isPublic')) }}





{# trying to save a matrix field over here #}

                {# what matrix field is in the for loop - don't remove this (keep it out of the forloop)#}
                <input type="hidden" name="fields[testmatrix][new:1]" />

                <input type="text" name="fields[testmatrix][new:1][fields][matrixName]" value="test">

                <input type="text" name="fields[testmatrix][new:1][fields][matrixAmount]" value="test2">


            {# <input type="hidden" name="fields[testmatrix][new:1][type]" value="text" />

            {{ hiddenInput('fields[testmatrix]', 'new:1') }} #}

            {# Prefix the block's input names with `fields[myFieldHandle][blocks][new:1]` #}
            {# {% namespace "fields[testmatrix][testmatrixblock][new:1]" %}
                {{ hiddenInput('type', 'text') }}
                <textarea name="fields[<matrixName>]"></textarea>
            {% endnamespace %} #}


            {# Prefix the block's input names with `fields[myFieldHandle][blocks][new:1]` #}
                {# {{ hiddenInput('testmatrixblock', 'text') }}
                <input type='text' name="fields[matrixName][new:1]"></input>
                <input type='hidden' name="fields[matrixName][new:1].[enabled]" value="1"></input> #}



            <button type="submit">Publish</button>
        </form>
    </div>

{% endblock %}