{% extends "_layouts/site" %}

{# 
    check if game is private, and if it is private, 
    if so, check if the authorId and userId is the same 
    if the author ID and currenUser ID isn't the same, redirect to the homepage
#}
{% if entry.isPublic == false and entry.authorId != currentUser.id %}
    {% redirect('404') %}
{% endif %}

{% block content %}
    <div class="container games">
        <div class="games__left-column">
            <p class="games__content-specs txt-yellow"> 
                <span class="txt-dark-blue"> Leeftijd: </span> 
                <span class="games__content-specs-spec"> {{ entry.youngestAge }} tot {{ entry.oldestAge }} jaar </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Aantal spelers: </span> 
                <span class="games__content-specs-spec"> {{entry.leastAmountOfPlayers}} tot {{entry.mostAmountOfPlayers}} spelers </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Duur: </span> 
                <span class="games__content-specs-spec">  {{ entry.gametime | time ("H") * 60 + entry.gametime | time ("i") }} minuten </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Aantal groepen: </span> 
                <span class="games__content-specs-spec"> 
                    {{ entry.groups }} 
                    {% if (entry.groups == 1 ) %}
                        groep
                    {% else %}
                        groepen
                    {% endif %}
                </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Soort: </span> <span class="games__content-specs-spec"> {{entry.gameType.one().title}} </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Terrein: </span> <span class="games__content-specs-spec"> {{entry.terrain.one().title}} </span>
            </p>
            <p class="games__content-specs txt-yellow">
                <span class="txt-dark-blue"> Thema's: </span> <span class="games__content-specs-spec"> {{entry.theme.one().title}} </span>
            </p>
        </div>


        <div class="games__content">
            <h1 class="games__content-mainTitle txt-orange">
                {{entry.title}}
            </h1>

            <p class="games__content-text">Toegevoegd door <a href="/gebruiker/{{entry.author.id}}" class="txt-medium txt-light-blue">{{ entry.author.username }}</a> op {{ entry.postDate | date("d/m/Y") }}</p>
            
            <h3 class="games__content-subtitle txt-orange">
                Inleiding
            </h3>
            <p class="games__content-text">
                {{entry.intro}} 
            </p>

            <h3 class="games__content-subtitle txt-orange">
                Doel van het spel
            </h3>
            <div class="games__content-text redactor">
                {{entry.purpose}} 
            </div>

            <h3 class="games__content-subtitle txt-orange">
                Volledige uitleg van het spel
            </h3>
            <div class="games__content-text redactor">
                {{entry.explenation}} 
            </div>

            <h3 class="games__content-subtitle txt-orange">
                Bestanden
            </h3>

            <h3 class="games__content-subtitle txt-orange">
                Materiaal
            </h3>
            <ul>
            {% for material in entry.materialList %}
            <li>
                {{ material.materialAmount}}
                {{ material.materialName.one()}}
            </li>
            {% endfor %}
            </ul>


            {% do craft.upvote.setIcons({
                up   : '<i class="fa fa-thumbs-up"></i>',
                down : '<i class="fa fa-thumbs-down"></i>',
            }) %}
            
            <div>{{ craft.upvote.upvote(entry.id) }}</div>
            <div>{{ craft.upvote.tally(entry.id) }}</div>
            <div>{{ craft.upvote.downvote(entry.id) }}</div>


            <p> 
                Laatst bijgewerkt op {{ entry.dateUpdated | date ("d/m/yy") }} om {{ entry.dateUpdated | date ("H:i") }} 
            </p>

            {# Render the `comments.js` file - exclude the inline JS #}
            {{ craft.comments.renderJs(entry.id, {}, false) }}

            {# Fetch the variables required for the comments JS #}
            {% set jsVariables = craft.comments.getJsVariables(entry.id) %}

            {# Wait for the document to be ready, then initialise #}
            <script>
                document.addEventListener('DOMContentLoaded', function() {
                    // Populate the ID and the settings
                    new Comments.Instance('{{ jsVariables.id }}', {{ jsVariables.settings | json_encode | raw }});
                });
            </script>
            {{ craft.comments.render(entry.id) }}
            
        </div>
    </div>

{% endblock %}