{% extends "_layouts/site" %}

{% set gameId = craft.app.request.getSegment(2) %}
{# get the game from the database #}
{% set games = craft.entries({
    section: 'games',
    id: gameId,
})
.orderBy('postDate DESC') %}

{% set game = games.one() %}

{# Require that a user is logged in to view this form. #}
{% requireLogin %}

{% block content %}


    <div class="container">
        <div class="games__left-column profile__left-column">

        </div>
        <div class="games__content">

            {% if game != "" %}
                {% if (game.authorId == currentUser.id and game.isPublic == false) or game.isPublic == true  %}
                    {% macro errorList(errors) %}
                    {% if errors %}
                        {{ ul(errors, {class: 'errors'}) }}
                    {% endif %}
                    {% endmacro %}

                    {# If there were any validation errors, an `entry` variable will be 
                    passed to the template, which contains the posted values 
                    and validation errors. If that’s not set, we’ll default 
                    to a new entry. #}
                    {% set entry = entry ?? create('craft\\elements\\Entry') %}


                    {# Add `enctype="multipart/form-data"` to `<form>` if you’re 
                    uploading files. #}
                    <form class="form" method="post" accept-charset="UTF-8">
                        {{ csrfInput() }}
                        {{ actionInput('entries/save-entry') }}
                        {{ redirectInput('spelen/{slug}') }}
                        {{ hiddenInput('sectionId', '1') }}
                        {{ hiddenInput('enabled', '1') }}
                        {{ hiddenInput('fields[isPublic]', '') }}
                        {{ hiddenInput('entryId', gameId) }}

                        <label for="title">Naam van het spel</label>
                        {{ input('text', 'title', game.title, {
                            class: 'form-input',
                            required: true,
                            name: 'fields[title]',
                            id: 'title',
                        }) }}
                        {{ _self.errorList(entry.getErrors('title')) }}

                        <label for="youngestAge">Minimum leeftijd</label>
                        {{ tag('input', {
                            id: 'youngestAge',
                            type: 'number',
                            class: 'form-input',
                            required: true,
                            name: 'fields[youngestAge]',
                            value: game.youngestAge,
                            text: entry.youngestAge,
                        }) }}
                        {{ _self.errorList(entry.getErrors('youngestAge')) }}

                        <label for="oldestAge">Maximum leeftijd</label>
                        {{ tag('input', {
                            id: 'oldestAge',
                            type: 'number',
                            class: 'form-input',
                            required: true,
                            name: 'fields[oldestAge]',
                            value: game.oldestAge,
                            text: entry.oldestAge,
                        }) }}
                        {{ _self.errorList(entry.getErrors('oldestAge')) }}

                        <label for="leastAmountOfPlayers">Minimum aantal spelers</label>
                        {{ tag('input', {
                            id: 'leastAmountOfPlayers',
                            type: 'number',
                            class: 'form-input',
                            required: true,
                            name: 'fields[leastAmountOfPlayers]',
                            value: game.leastAmountOfPlayers,
                            text: entry.leastAmountOfPlayers,
                        }) }}
                        {{ _self.errorList(entry.getErrors('leastAmountOfPlayers')) }}

                        <label for="mostAmountOfPlayers">Maximum aantal spelers</label>
                        {{ tag('input', {
                            id: 'mostAmountOfPlayers',
                            type: 'number',
                            class: 'form-input',
                            required: true,
                            name: 'fields[mostAmountOfPlayers]',
                            value: game.mostAmountOfPlayers,
                            text: entry.mostAmountOfPlayers,
                        }) }}
                        {{ _self.errorList(entry.getErrors('mostAmountOfPlayers')) }}

                        <label for="groups">Aantal groepen</label>
                        {{ tag('input', {
                            id: 'groups',
                            type: 'number',
                            class: 'form-input',
                            required: true,
                            name: 'fields[groups]',
                            value: game.groups,
                            text: entry.groups,
                        }) }}
                        {{ _self.errorList(entry.getErrors('groups')) }}

                        <label for="gametime">Speelduur</label>
                        {{ tag('input', {
                            id: 'gametime',
                            type: 'time',
                            class: 'form-input',
                            required: true,
                            name: 'fields[gametime]',
                            value: game.gametime|time,
                            text: entry.gametime,
                        }) }}
                        {{ _self.errorList(entry.getErrors('gametime')) }}


                        <label for="intro">Korte uitleg over het spel</label>
                        {{ tag('textarea', {
                            id: 'intro',
                            type: 'textarea',
                            class: 'form-textarea',
                            required: true,
                            name: 'fields[intro]',
                            value: game.intro,
                            text: game.intro,
                        }) }}
                        {{ _self.errorList(entry.getErrors('intro')) }}

                        <label for="purpose">Doel van het spel</label>
                        {{ tag('textarea', {
                            id: 'purpose',
                            type: 'text',
                            class: 'form-textarea',
                            required: true,
                            name: 'fields[purpose]',
                            value: game.purpose,
                            text: game.purpose,
                        }) }}
                        {{ _self.errorList(entry.getErrors('purpose')) }}

                        <label for="explenation">Speluitleg</label>
                        {{ tag('textarea', {
                            id: 'explenation',
                            type: 'text',
                            class: 'form-textarea',
                            required: true,
                            name: 'fields[explenation]',
                            value: game.explenation,
                            text: game.explenation,
                        }) }}
                        {{ _self.errorList(entry.getErrors('explenation')) }}

                        {# Include a hidden input first so Craft knows to update the existing value
                        if no checkboxes are checked. #}
                        {{ hiddenInput('fields[gameType]', '') }}

                        {# Get all of the possible category options #}
                        {% set gameTypeCategory = craft.categories()
                            .group('gameType')
                            .all() 
                        %}

                        {# Get the currently related category IDs #}
                        {% set relatedGameTypeCategoryIds = game is defined
                            ? game.gameType.ids()
                            : [] 
                        %}

                        <label for="gameType">Speltype</label>
                        <ul class="form-list">
                            {% nav possibleCategory in gameTypeCategory %}
                                <li>
                                <label>
                                    {{ input(
                                    'checkbox',
                                    'fields[gameType][]',
                                    possibleCategory.id,
                                    { checked: possibleCategory.id in relatedGameTypeCategoryIds}
                                    ) }}
                                    {{ possibleCategory.title }}
                                </label>
                                {% ifchildren %}
                                    <ul>
                                    {% children %}
                                    </ul>
                                {% endifchildren %}
                                </li>
                            {% endnav %}
                        </ul>

                        {# Include a hidden input first so Craft knows to update the existing value
                        if no checkboxes are checked. #}
                        {{ hiddenInput('fields[terrain]', '') }}

                        {# Get all of the possible category options #}
                        {% set terrainCategory = craft.categories()
                            .group('terrainType')
                            .all() 
                        %}

                        {# Get the currently related category IDs #}
                        {% set relatedTerrainCategoryIds = game is defined
                            ? game.terrain.ids()
                            : [] 
                        %}

                        <label for="terrain">Terrein</label>
                        <ul class="form-list">
                            {% nav possibleCategory in terrainCategory %}
                                <li>
                                <label>
                                    {{ input(
                                    'checkbox',
                                    'fields[terrain][]',
                                    possibleCategory.id,
                                    { checked: possibleCategory.id in relatedTerrainCategoryIds}
                                    ) }}
                                    {{ possibleCategory.title }}
                                </label>
                                {% ifchildren %}
                                    <ul>
                                    {% children %}
                                    </ul>
                                {% endifchildren %}
                                </li>
                            {% endnav %}
                        </ul>

                        {# Include a hidden input first so Craft knows to update the existing value
                        if no checkboxes are checked. #}
                        {{ hiddenInput('fields[theme]', '') }}

                        {# Get all of the possible category options #}
                        {% set themeCategory = craft.categories()
                            .group('themeType')
                            .all() 
                        %}

                        {# Get the currently related category IDs #}
                        {% set relatedThemeCategoryIds = game is defined
                            ? game.theme.ids()
                            : [] 
                        %}

                        <label for="theme">Thema's</label>
                        <ul class="form-list">
                            {% nav possibleCategory in themeCategory %}
                                <li>
                                <label>
                                    {{ input(
                                    'checkbox',
                                    'fields[theme][]',
                                    possibleCategory.id,
                                    { checked: possibleCategory.id in relatedThemeCategoryIds}
                                    ) }}
                                    {{ possibleCategory.title }}
                                </label>
                                {% ifchildren %}
                                    <ul>
                                    {% children %}
                                    </ul>
                                {% endifchildren %}
                                </li>
                            {% endnav %}
                        </ul>

                        {% if currentUser.id == game.authorId %}
                            <label for="isPublic">Mag het spel openbaar zichtbaar zijn?</label>
                            {{ tag('input', {
                                id: 'isPublic',
                                type: 'checkbox',
                                class: 'form-checkbox',
                                name: 'fields[isPublic]',
                                checked: (game.isPublic ?? false) ? true : false,
                            }) }}
                            {{ _self.errorList(entry.getErrors('isPublic')) }}
                        {% endif %}


                        <button type="submit" class="btn form-button">Bewerking opslaan</button>
                    </form>
                {% else %}
                    <h1> Oeps, dit spel bestaat niet</h1>
                {% endif %}
            {% else %}
                <h1> Oeps, dit spel bestaat niet</h1>
            {% endif %}
        </div>
    </div>

{% endblock %}