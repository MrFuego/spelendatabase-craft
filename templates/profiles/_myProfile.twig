{% extends "_layouts/site" %}
  
{% block content %}

    <div class="container profile">
        <div class="games__left-column">
        </div>
        {# Require that a user is logged in to view this form. #}
        {% requireLogin %}

        <div class="games__content">

            {% macro errorList(errors) %}
            {% if errors %}
                {{ ul(errors, {class: 'errors'}) }}
            {% endif %}
            {% endmacro %}

            {# If there were any validation errors, a `user` variable will be passed to the
            template, which contains the posted values and validation errors. If that’s not
            set, we’ll default to the current user. #}
            {% set user = user ?? currentUser %}

            {% if user.hasErrors() %}
                <p>Unable to save your profile.</p>
            {% endif %}

            <form class="form form-50" method="post" accept-charset="UTF-8" enctype="multipart/form-data">
                {{ csrfInput() }}
                {{ actionInput('users/save-user') }}
                {{ hiddenInput('userId', user.id) }}
                {{ redirectInput("gebruiker/#{currentUser.id}") }}

                {% if user.photo %}
                    <label>Profielfoto</label>
                    {{ user.photo.getImg({width: 150, height: 150})|attr({
                    id: 'user-photo',
                    alt: user.friendlyName,
                    }) }}

                    <label for="delete-photo">
                    {{ input('checkbox', 'deletePhoto', '1', {
                        id: 'delete-photo',
                        class: 'form-checkbox',
                    }) }}
                    Verwijder huidige foto
                    </label>
                {% endif %}

                <label for="photo">Upload een nieuwe foto</label>
                {{ input('file', 'photo', null, {
                    id: 'photo',
                    class: 'form-file',
                    accept: 'image/png,image/jpeg',
                }) }}

                <label for="first-name">Voornaam</label>
                {{ input('text', 'firstName', user.firstName, {
                    id: 'first-name',
                    class: user.hasErrors('firstName') ? 'error',
                    class: 'form-input',
                    autocomplete: 'given-name',
                }) }}
                {{ _self.errorList(user.getErrors('firstName')) }}

                <label for="last-name">Achternaam</label>
                {{ input('text', 'lastName', user.lastName, {
                    id: 'last-name',
                    class: user.hasErrors('lastName') ? 'error',
                    class: 'form-input',
                    autocomplete: 'family-name',
                }) }}
                {{ _self.errorList(user.getErrors('lastName')) }}

                {% if not craft.app.config.general.useEmailAsUsername %}
                    <label for="username">Gebruikersnaam</label>
                    {{ input('text', 'username', user.username, {
                    id: 'username',
                    class: user.hasErrors('username') ? 'error',
                    class: 'form-input',
                    autocomplete: 'username',
                    }) }}
                    {{ _self.errorList(user.getErrors('username')) }}
                {% endif %}

                <label for="email">Email</label>
                {{ input('text', 'email', user.unverifiedEmail ?? user.email, {
                    id: 'email',
                    class: user.hasErrors('email') ? 'error',
                    class: 'form-input',
                    autocomplete: 'email',
                }) }}
                {{ _self.errorList(user.getErrors('username')) }}

                {% if craft.app.projectConfig.get('users.requireEmailVerification') %}
                    <p class="txt-orange">Een nieuw e-mailadres moet geverifieerd worden</p>
                {% endif %}

                <label for="new-password">Nieuw wachtwoord</label>
                {{ input('password', 'newPassword', null, {
                    id: 'new-password',
                    class: user.hasErrors('newPassword') ? 'error',
                    class: 'form-input',
                    autocomplete: 'new-password',
                }) }}
                {{ _self.errorList(user.getErrors('newPassword')) }}

                <label for="current-password">Huidig wachtwoord</label>
                {{ input('password', 'password', null, {
                    id: 'current-password',
                    class: user.hasErrors('currentPassword') ? 'error',
                    class: 'form-input',
                    autocomplete: 'current-password',
                }) }}
                {{ _self.errorList(user.getErrors('currentPassword')) }}

                {# Custom “Bio” field #}
                {# <label for="bio">Bio</label>
                {{ tag('textarea', {
                    text: user.bio,
                    id: 'bio',
                    name: 'fields[bio]',
                    class: user.hasErrors('bio') ? 'error',
                }) }}
                {{ _self.errorList(user.getErrors('bio')) }} #}

                <button type="submit" class="btn form-button">Save Profile</button>
            </form>
        </div>
    </div>


{% endblock %}